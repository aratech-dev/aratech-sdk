plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}

task androidSourcesJar(type: Jar) {
    classifier 'sources'
    from android.sourceSets.main.java.srcDirs
}

task androidJavadocs(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier = 'javadoc'
    from androidJavadocs.destinationDir
}

artifacts {
    archives androidJavadocsJar
}

project.afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                from components.release
                artifact androidSourcesJar // optional sources
                artifact androidJavadocsJar

                groupId = 'com.github.aratech'
                artifactId = 'aratech'
                version = ARTIFACT_VERSION

                pom {
                    name = ''
                    description = ''
                    url = ''
                    properties = [
                            myProp: "value",
                            "prop.with.dots": "anotherValue"
                    ]
                    licenses {
                        license {
                            name = ''
                            url = ''
                        }
                    }
                    developers {
                        developer {
                            id = ''
                            name = ''
                            email = ''
                        }
                    }
                    scm {
                        connection = ''
                        developerConnection = ''
                        url = ''
                    }
                }
            }
        }

        repositories {
            maven {
                name = REPOSITORY_NAME
                url = 'https://api.github.com/repos/' + COMPANY + '/' + REPOSITORY_PROJECT + '/releases/tags/' + ARTIFACT_VERSION
                credentials {
                    username = "ash"
                    password = "pwd"
                }
            }
        }
    }
}

//signing {
//    sign publishing.publications.release
//}

tasks.register('generateRepo', Zip) {
    def publishTask = tasks.named('publishReleasePublicationToMyrepoRepository')
    from publishTask.map { it.getRepository().getUrl() }
    into 'aratechLibrary'
    archiveFileName.set('aratechLibrary.zip')
}

android {
    namespace = 'com.aratech.push'
    compileSdk 31

    defaultConfig {
//        applicationId "com.aratech.push"
        aarMetadata {
            minSdk = 29
        }
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}